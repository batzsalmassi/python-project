name: "Terraform Plan on Pull Request"

on:
  pull_request:
    paths:
      - 'main/**'
  workflow_dispatch:

env:
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: ${{ secrets.BACKEND_REGION }}

jobs:
  terraform:
    if: github.repository == 'batzsalmassi/python-project'
    name: "Terraform Plan and Apply"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      actions: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.7

      - name: Configure AWS Credentials for CloudGuru
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CLOUDGURU_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CLOUDGURU_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          role-duration-seconds: 3600
          role-session-name: GithubActionsSession

      - name: Configure AWS Credentials for Personal Account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          role-duration-seconds: 3600
          role-session-name: PersonalAccountSession

      - name: Create AWS CLI config and credentials
        run: |
          mkdir -p ~/.aws
          echo "[CloudGuru]
          aws_access_key_id=${{ secrets.CLOUDGURU_AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.CLOUDGURU_AWS_SECRET_ACCESS_KEY }}

          [seanPrivate]
          aws_access_key_id=${{ secrets.PERSONAL_AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.PERSONAL_AWS_SECRET_ACCESS_KEY }}" > ~/.aws/credentials

          echo "[profile CloudGuru]
          region=${{ env.AWS_REGION }}

          [profile seanPrivate]
          region=${{ env.AWS_REGION }}" > ~/.aws/config

      - name: Initialize Terraform
        working-directory: ./main
        run: terraform init

      - name: Terraform Plan
        id: plan
        working-directory: ./main
        env:
          SHODAN_API_KEY: ${{ secrets.SHODAN_API_KEY }}
          TF_VAR_personal_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_personal_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform plan -no-color -input=false \
            -var "shodan_api_key=${{ secrets.SHODAN_API_KEY }}" \
            -var "personal_aws_access_key=$TF_VAR_personal_aws_access_key" \
            -var "personal_aws_secret_key=$TF_VAR_personal_aws_secret_key" | tee plan_output.txt
        continue-on-error: true

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: ./main
        env:
          SHODAN_API_KEY: ${{ secrets.SHODAN_API_KEY }}
          TF_VAR_personal_aws_access_key: ${{ secrets.PERSONAL_AWS_ACCESS_KEY_ID }}
          TF_VAR_personal_aws_secret_key: ${{ secrets.PERSONAL_AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform apply -auto-approve -input=false \
            -var "shodan_api_key=${{ secrets.SHODAN_API_KEY }}" \
            -var "personal_aws_access_key=$TF_VAR_personal_aws_access_key" \
            -var "personal_aws_secret_key=$TF_VAR_personal_aws_secret_key"

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
